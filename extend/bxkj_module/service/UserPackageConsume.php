<?php

namespace bxkj_module\service;

use bxkj_module\exception\Exception;
use think\Db;

class UserPackageConsume extends BaseConsume
{
    protected $user_package;

    public function __construct(&$user)
    {
        parent::__construct($user);
    }


    public function setOrder($orderType, &$order)
    {
        parent::setOrder($orderType, $order); // TODO: Change the autogenerated stub

        $this->user_package = Db::name('user_package')->field('id, use_time, expire_time')->where(['status'=>1, 'user_id'=>$this->order['user_id'], 'gift_id'=>$this->order['gift_id']])->order('create_time desc')->select();

        return $this;
    }


    public function preConsume()
    {
        $now = time();

        $num = 0;

        if (!empty($this->user_package))
        {
            foreach ($this->user_package as $key => $value)
            {
                if ($now < $value['use_time']) continue;

                if (!empty($value['expire_time']))
                {
                    if ($now > $value['expire_time'])
                    {
                        //将道具置为失效状态
                        Db::name('user_package')->where('id', $value['id'])->update(['status'=>0]);
                        continue;
                    }
                }

                ++$num;
            }

            $exp = min($num, $this->order['num']);

            $this->order['num'] -= $exp;
        }
    }



    public function consume()
    {
        $now = time();

        $all_id = [];

        if (!empty($this->user_package))
        {
            foreach ($this->user_package as $key => $value)
            {
                if ($now < $value['use_time']) continue;

                array_push($all_id, $value['id']);
            }

            Db::name('user_package')
                ->where(['id' => $all_id, 'status' => 1])
                ->update(['status'=>2]);

            $num = count($all_id);

            $exp = min($num, $this->order['num']);

            $this->order['num'] -= $exp;
        }
    }
}