<?php
/**
 *任务设置页面
 * Created by PhpStorm.
 * User: zack
 * Date: 2020/5/6 0006
 * Time: 上午 10:13
 */

namespace app\videotask\controller;

use app\videotask\validate\SysConfig;
use bxkj_common\RedisClient;
use bxkj_module\service\Task;
use bxkj_module\service\User_task;
use think\Db;
use think\facade\Request;

class TaskSet extends Controller
{
    public function __construct()
    {
        parent::__construct();
    }

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        //读取config配置
        $redis       = new RedisClient();
        $cacheFriend = $redis->exists('cache:friend_config');
        if (empty($cacheFriend)) {
            $arr  = [];
            $ser  = new \app\admin\service\SysConfig();
            $info = $ser->getConfig("friend");
            if (empty($info)) return [];
            $redis->setex('cache:friend_config', 4 * 3600, $info['value']);
        }
        $friendConfigRes       = $redis->get('cache:friend_config');
        $this->friendConfigRes = json_decode($friendConfigRes, true);
        $this->earray  =       $earry    = [[
            'name'  => '视频任务',
            'value' => 0,
        ], [
            'name'  => '用户任务',
            'value' => 1,
        ]];
    }

    public function set()
    {
        $info = $this->getModel('sys_config')->where(['mark' => 'new_people_task'])->value('value');
        if (Request::isGet()) {
            $info  = json_decode($info, true);
            $items = array();
            if (!empty($info['new_people_task_config']['sign_day'])) {
                foreach ($info['new_people_task_config']['sign_day'] as $key => $value) {
                    $items[$key]['sign_day']    = $value;
                    $items[$key]['sign_millet'] = $info['new_people_task_config']['sign_millet'][$key];
                    $items[$key]['sign_bean']   = $info['new_people_task_config']['sign_bean'][$key];
                }
                $this->assign('items', $items);
            }
            if (!empty($info['new_people_task_config']['video_num'])) {
                foreach ($info['new_people_task_config']['video_num'] as $key => $value) {
                    $video_items[$key]['video_num']    = $value;
                    $video_items[$key]['video_millet'] = $info['new_people_task_config']['video_millet'][$key];
                    $video_items[$key]['video_bean']   = $info['new_people_task_config']['video_bean'][$key];
                }
                $this->assign('video_items', $video_items);
            }
            if (!empty($info['new_people_task_config']['watch_video_num'])) {
                foreach ($info['new_people_task_config']['watch_video_num'] as $key => $value) {
                    $watch_video_items[$key]['watch_video_num']    = $value;
                    $watch_video_items[$key]['watch_video_millet'] = $info['new_people_task_config']['watch_video_millet'][$key];
                    $watch_video_items[$key]['watch_video_bean']   = $info['new_people_task_config']['watch_video_bean'][$key];
                }
                $this->assign('watch_video_items', $watch_video_items);
            }
            $this->assign('_info', $info);
            return $this->fetch();
        } else {
            $post      = json_encode(input());
            $sysConfig = new SysConfig();

            if (empty($info)) {
                $result = $this->getModel('sys_config')->insert(['mark' => 'new_people_task', 'classified' => 'app', 'value' => $post]);
            } else {
                $result = $this->getModel('sys_config')->where(['mark' => 'new_people_task'])->update(['value' => $post]);
            }
            $redis = RedisClient::getInstance();
            $data  = $redis->get("sign_data");
            if (!empty($data)) $redis->del("sign_data");;
            if ($result > 0) {
                $ser = new \app\admin\service\SysConfig();
                $ser->resetConfig();
            }


            $this->success('操作成功', $result);
        }
    }

    public function index()
    {
        $this->checkAuth('friend:Report:index');
        $get      = input();
        $userTask = new  User_task();
        $total    = $userTask->getTotal($get);
        $page     = $this->pageshow($total);
        $list     = $userTask->getList($get, $page->firstRow, $page->listRows);

        $info = $this->getModel('sys_config')->where(['mark' => 'new_task'])->value('value');
        $info  = json_decode($info, true);
        $this->assign('_isopen', $info['new_task']['is_open']);
        $this->assign('_erarry', json_encode($this->earray));
        $this->assign('_list', $list);

        return $this->fetch();
    }

    public function edit()
    {
        if (Request::isGet()) {
            $id   = input('id');
            $info = Db::name('user_task')->where('id', $id)->find();
            if (empty($info)) $this->error('信息不存在');
            $json_array = json_decode($info['task_setting'], true);
            $finish     = '';
            $reward     = '';
            if (array_key_exists('task_value', $json_array)) {
                foreach ($json_array as $key => $value) {
                    if ($key == 'task_value') {
                        $finish = $value;
                    }
                    if ($key == 'point') {
                        $reward = $value;
                    }
                }
            } else {
                foreach ($json_array as $key => $value) {
                    $finish = $finish . ',' . $key;
                    $reward = $reward . ',' . $value;
                }
            }
            $resttype = [['id' => 0, 'name' => '一次性任务'], ['id' => 1, 'name' => '循环任务']];
            $this->assign('finish', trim($finish, ','));
            $this->assign('reward', trim($reward, ','));
            $this->assign('resttype', $resttype);
            $this->assign('_erarry', $this->earray);
            $this->assign('_info', $info);
            return $this->fetch();
        } else {
            $userTask = new User_task();
            $post     = input();
            $result = $userTask->editTask($post);
            if ($result == -1) {
                $this->error('录入的数据不能为空');
            }
            $this->success('修改成功', $result);
        }
    }

    public function change_status()
    {
        $this->checkAuth('friend:comment:change_status');
        $ids = get_request_ids();
        if (empty($ids)) $this->error('请选择记录');
        $status = input('status');
        if (!in_array($status, ['0', '1'])) $this->error('状态值不正确');
        $msgCommentE = new User_task();
        $num         = $msgCommentE->changeStatus($ids, $status);
        if (!$num) $this->error('切换状态失败');
        $this->success('切换成功');
    }

    public function changeopen()
    {
        $info = $this->getModel('sys_config')->where(['mark' => 'new_task'])->value('value');
        $data['new_task']['is_open'] = input("is_open");
        if (empty($info)) {
            $result = $this->getModel('sys_config')->insert(['mark' => 'new_task', 'classified' => 'app', 'value' => json_encode($data)]);
        } else {
            $result = $this->getModel('sys_config')->where(['mark' => 'new_task'])->update(['value' => json_encode($data)]);
        }

        if($result == 1){
            $ser = new \app\admin\service\SysConfig();
            $ser->resetConfig();
            $this->success('切换成功');
        } else {
            $this->error('切换失败');
        }

    }
}