<?php
/**
 * Created by PhpStorm.
 * User: “崔鹏
 * Date: 2020/06/28
 * Time:  下午 16:56
 */

namespace app\friend\controller;

use app\admin\service\SysConfig;
use app\friend\service\FriendCircleCommentEvaluate;
use app\friend\service\FriendCircleMessageReport;
use app\friend\service\FriendCircleTopic;
use bxkj_common\RedisClient;
use think\Db;
use think\facade\Request;

class Topic extends Controller
{
    public function __construct()
    {
        parent::__construct();
    }

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        //读取config配置
        $redis       = new RedisClient();
        $cacheFriend = $redis->exists('cache:friend_config');
        if (empty($cacheFriend)) {
            $arr  = [];
            $ser  = new SysConfig();
            $info = $ser->getConfig("friend");
            if (empty($info)) return [];
            $redis->setex('cache:friend_config', 4 * 3600, $info['value']);
        }
        $friendConfigRes       = $redis->get('cache:friend_config');
        $this->friendConfigRes = json_decode($friendConfigRes, true);
    }

    public function index()
    {
        $this->checkAuth('friend:Topic:index');
        $get         = input();
        $circleTopic = new  FriendCircleTopic();
        $total       = $circleTopic->getTotal($get);
        $page        = $this->pageshow($total);
        $list        = $circleTopic->getList($get, $page->firstRow, $page->listRows);
        $isRecom     = [['name' => '推荐', 'value' => 1], ['name' => '普通', 'value' => 0]];
        $ishot    = [['name' => '热门', 'value' => 1], ['name' => '普通', 'value' => 0]];
        $this->assign('isRecom', json_encode($isRecom));
        $this->assign('ishot', json_encode($ishot));
        $this->assign('_list', $list);
        return $this->fetch();
    }

    public function del()
    {
        $this->checkAuth('friend:Report:delete');
        $ids = get_request_ids();
        if (empty($ids)) $this->error('请选择记录');
        $msgComment = new FriendCircleTopic();
        $num        = $msgComment->del($ids);
        if (!$num) $this->error('关闭失败');
        alog("friend.topic.del", "删除话题 ID：".implode(",", $ids));
        $this->refreshTopic();
        $count = count($ids);
        $this->success("关闭成功，共计关闭{$count}条记录");
    }

    public function edit()
    {
        if (Request::isGet()) {
            $id   = input('id');
            $info = Db::name('friend_circle_topic')->where('topic_id', $id)->find();
            if (empty($info)) $this->error('信息不存在');
            $this->assign('_info', $info);
            return $this->fetch('add');
        } else {
            $msgComment = new FriendCircleTopic();
            $post       = input();
            $result     = $msgComment->backstageedit($post);
            if (!$result) $this->error($msgComment->getError());
            alog("friend.topic.edit", "编辑话题 ID：".$post['id']);
            $this->refreshTopic();
            $this->success('修改成功', $result);
        }
    }

    public function change_recom()
    {
        $this->checkAuth('friend:Topic:change_recom');
        $ids = get_request_ids();
        if (empty($ids)) $this->error('请选择记录');
        $status = input('status');
        if (!in_array($status, ['0', '1'])) $this->error('状态值不正确');
        $topicMsg = new FriendCircleTopic();
        $num      = $topicMsg->changeRecom($ids, $status);
        if (!$num) $this->error('切换状态失败');
        alog("friend.topic.edit", "编辑话题 ID：".implode(",", $ids)."<br>修改推荐状态".($status == 1 ? "推荐" : "普通"));
        $this->refreshTopic();
        $this->success('切换成功');
    }

    public function change_status()
    {
        $this->checkAuth('friend:Topic:change_status');
        $ids = get_request_ids();
        if (empty($ids)) $this->error('请选择记录');
        $status = input('status');
        if (!in_array($status, ['0', '1'])) $this->error('状态值不正确');
        $topicMsg = new FriendCircleTopic();
        $num      = $topicMsg->changeStatus($ids, $status);
        if (!$num) $this->error('切换状态失败');
        alog("friend.topic.edit", "编辑话题 ID：".implode(",", $ids)."<br>修改状态".($status == 1 ? "启用" : "禁用"));
        $this->refreshTopic();
        $this->success('切换成功');
    }

    public function change_hot()
    {
        $this->checkAuth('friend:Topic:change_hot');
        $ids = get_request_ids();
        if (empty($ids)) $this->error('请选择记录');
        $status = input('status');
        if (!in_array($status, ['0', '1'])) $this->error('状态值不正确');
        $topicMsg = new FriendCircleTopic();
        $num      = $topicMsg->changeHot($ids, $status);
        if (!$num) $this->error('切换状态失败');
        alog("friend.topic.edit", "编辑话题 ID：".implode(",", $ids)."<br>修改热门状态".($status == 1 ? "热门" : "普通"));
        $this->refreshTopic();
        $this->success('切换成功');
    }


    public function add()
    {
        $this->checkAuth('friend:topic:add');
        if (Request::isGet()) {
            $info = [];
            $get  = input();
            if ($get['pcat_id'] != '') $info['pcat_id'] = $get['pcat_id'];
            if ($get['cat_id'] != '') $info['cat_id'] = $get['cat_id'];
            $this->assign('_info', $info);
            return $this->fetch();
        } else {
            $friend = new FriendCircleTopic();
            $post   = input();
            $result = $friend->backstageadd($post);
            if (!$result) $this->error($friend->getError());
            $this->refreshTopic();
            alog("friend.topic.add", "新增话题 ID：".$result);
            $this->success('新增成功', $result);
        }
    }

    /**
     * 刷新redis
     * return  json
     */
    public function refreshTopic()
    {
        $friendTopic    = new FriendCircleTopic();
        $redis          = new RedisClient();
        $hotTopic       = $friendTopic->getTopic(['status' => 1, 'is_hot' => 1], '*', 'hot desc', $this->friendConfigRes['hot_topic_num']);
        $NewTopic       = $friendTopic->getTopic(['status' => 1], '*', 'ctime desc', $this->friendConfigRes['new_topic_num']);
        $recommendTopic = $friendTopic->getTopic(['status' => 1, 'is_recom' => 1], '*', 'ctime desc', $this->friendConfigRes['new_topic_num']);
        $hotTopic1       = [
            'name' => "热门话题",
            'data' => $hotTopic
        ];
        $newTopic1       = [
            'name' => "最新话题",
            'data' => $NewTopic
        ];
        $recommendTopic1 = [
            'name' => "推荐话题",
            'data' => $recommendTopic
        ];
        $topic1          = [
            $hotTopic1,
            $newTopic1,
            $recommendTopic1,
        ];
        $redis->HSET('cache:friend_msg_Topic', 'Topic', json_encode($topic1));
    }
}